/*Dimensiones:

DIM_EMPLOYEE_TERRITORIES CON REGION
DIM_EMPLOYEES SIN TERRITORY
DIM_ORDERS CON SHIPPER Y PHONE
DIM_CUSTOMERS
DIM_PRODUCTS
DIM_CATEGORIES
DIM_SUPPLIERS
DIM_TIME 1996-1998
FACT_SALES CON FECHA (ORDER_DATE), UNIT_PRICE, QUANTITY, DISCOUNT
*/


DROP TABLE DIM_EMPLOYEE_TERRITORIES;
DROP TABLE DIM_EMPLOYEES;
DROP TABLE DIM_ORDERS;
DROP TABLE DIM_CUSTOMERS;
DROP TABLE DIM_PRODUCTS;
DROP TABLE DIM_CATEGORIES;
DROP TABLE DIM_SUPPLIERS;
DROP TABLE DIM_TIME;
DROP TABLE FACT_SALES;


--Time

CREATE TABLE DIM_TIME(
	ID_TIME INT IDENTITY NOT NULL CONSTRAINT PK_TIME PRIMARY KEY,
	DATE DATE NULL,
	YEAR INT NULL,
	MONTH INT NULL,
	DAY INT NULL,
	NDAY VARCHAR(30) NULL,
	NMONTH VARCHAR(20) NULL,
	DAY_YEAR INT NULL,
	PERIOD VARCHAR(30) NULL
)

SELECT * FROM DIM_TIME
DELETE FROM DIM_TIME
DBCC CHECKIDENT (DIM_TIME, RESEED, 0)


BEGIN
SET LANGUAGE English;
DECLARE @FECHA_INICIO DATE;
DECLARE @FECHA_FINAL DATE;
SET @FECHA_INICIO='1996-01-01';
SET @FECHA_FINAL ='1998-12-31';

DECLARE @PFECHA DATE;
DECLARE @PANNIO INT;
DECLARE @PMES INT;
DECLARE @PNMES VARCHAR(20);
DECLARE @PDIA  INT;
DECLARE @PDIA_ANNIO INT  ;
DECLARE @PERIODO VARCHAR(30);
DECLARE @PNDIA VARCHAR(30);

WHILE @FECHA_INICIO<=@FECHA_FINAL
	BEGIN

		SET @PFECHA      = @FECHA_INICIO;
		SET @PANNIO 	 = YEAR(@FECHA_INICIO);
		SET @PMES 		 = MONTH(@FECHA_INICIO);
		SET @PNMES		 = DATENAME(MONTH, @FECHA_INICIO);
		SET @PNDIA		 = DATENAME(dw,@FECHA_INICIO);
		SET @PDIA  		 = DAY(@FECHA_INICIO);
		SET @PDIA_ANNIO  = DATENAME(DAYOFYEAR, @FECHA_INICIO) ;
		SET @PERIODO     = CONCAT( CASE WHEN @PMES BETWEEN 1 and 9  THEN 	
							CONCAT('0',CAST(@PMES AS VARCHAR(1))) ELSE 
								CAST( @PMES AS VARCHAR(2)) END ,' - ',DATENAME(MONTH, @FECHA_INICIO))
		
		INSERT INTO DIM_TIME (DATE,
								YEAR,
								MONTH,
								DAY,
								NDAY,
								NMONTH,
								DAY_YEAR,
								PERIOD
								)
								VALUES
								(@PFECHA ,	
								@PANNIO ,
								@PMES ,
								@PDIA,
								UPPER(@PNDIA),
								UPPER(@PNMES),	
								@PDIA_ANNIO ,
								UPPER(@PERIODO)
								)
				SET @FECHA_INICIO=DATEADD(DAY,1,@FECHA_INICIO);
	END ;

END ;


SELECT * FROM DIM_TIME




CREATE TABLE DIM_EMPLOYEES(
	ID_EMPLOYEE INT IDENTITY NOT NULL CONSTRAINT PK_EMPLOYEE PRIMARY KEY,
	EMPLOYEE_ID INT NOT NULL,
	EMPLOYEE_NAME VARCHAR(80) NOT NULL,
	TITLE VARCHAR(40) NOT NULL,
    BIRTH_DATE DATE NOT NULL,
    HIRE_DATE DATE NOT NULL,
    CITY VARCHAR(20) NOT NULL,
    REGION VARCHAR(20) NOT NULL,
    COUNTRY VARCHAR(20) NOT NULL,
	TERRITORY VARCHAR(20) NOT NULL,
    REPORTS_TO VARCHAR(60) NOT NULL
)


CREATE TABLE DIM_ORDERS(
	ID_ORDER INT IDENTITY NOT NULL CONSTRAINT PK_ORDER PRIMARY KEY,
	ORDER_ID INT NOT NULL,
	CUSTOMERID VARCHAR(20) NOT NULL,
	CUSTOMER VARCHAR(80) NOT NULL,
	EMPLOYEE VARCHAR(80) NOT NULL,
    ORDER_DATE DATE NOT NULL,
    REQUIRED_DATE DATE NOT NULL,
    SHIPPED_DATE DATE NOT NULL,
    SHIPPER VARCHAR(30) NOT NULL,
    FREIGHT DECIMAL(25,2) NOT NULL,
    SHIP_CITY VARCHAR(30) NOT NULL,
    SHIP_REGION VARCHAR(20) NOT NULL,
    SHIP_COUNTRY VARCHAR(30) NOT NULL
)

CREATE TABLE DIM_CUSTOMERS(
	ID_CUSTOMER INT IDENTITY NOT NULL CONSTRAINT PK_CUSTOMER PRIMARY KEY,
	CUSTOMER_ID VARCHAR(15) NOT NULL,
	COMPANY_NAME VARCHAR(80) NOT NULL,
	CONTACT_NAME VARCHAR(80) NOT NULL,
    CONTACT_TITLE VARCHAR(80) NOT NULL,
    CITY VARCHAR(40) NOT NULL,
    REGION VARCHAR(40) NOT NULL,
    COUNTRY VARCHAR(40) NOT NULL,
    CATEGORY VARCHAR(40) NOT NULL,
    ENTRY_DATE DATE NOT NULL
)

CREATE TABLE DIM_PRODUCTS(
	ID_PRODUCT INT IDENTITY NOT NULL CONSTRAINT PK_PRODUCT PRIMARY KEY,
	PRODUCT_ID INT NOT NULL,
	PRODUCT_NAME VARCHAR(80) NOT NULL,
	CATEGORY VARCHAR(30) NOT NULL,
	DESCRIPTION VARCHAR(100) NOT NULL,
	SUPPLIER VARCHAR(100) NOT NULL,
    REORDER_LEVEL INT NOT NULL
)


CREATE TABLE FACT_SALES(
	ID_SALE INT IDENTITY NOT NULL CONSTRAINT PK_SALE PRIMARY KEY CLUSTERED,
	ID_EMPLOYEE INT NOT NULL,
	ID_ORDER INT NOT NULL,
	ID_CUSTOMER INT NOT NULL,
	ID_PRODUCT INT NOT NULL,
	ID_TIME INT NOT NULL,
	QUANTITY INT NOT NULL,
	UNIT_PRICE DECIMAL(25,2) NOT NULL,
    DISCOUNT DECIMAL(25,2) NOT NULL,
    ORDER_DATE DATE NOT NULL
) 

CREATE TABLE ORDER_DETAILS (
	ORDERID INT NOT NULL,
	PRODUCTID INT NOT NULL,
    UNITPRICE DECIMAL(25,2) NOT NULL,
	QUANTITY INT NOT NULL,
    DISCOUNT DECIMAL(25,2) NOT NULL
)

CREATE TABLE METRICAS(
	IDENTIFICADOR INT NULL
) 



/*
CREATE TABLE DIM_SUPPLIERS(
	ID_SUPPLIER INT IDENTITY NOT NULL CONSTRAINT PK_SUPPLIER PRIMARY KEY,
	SUPPLIER_ID INT NOT NULL,
	COMPANY_NAME VARCHAR(80) NOT NULL,
	CONTACT_NAME VARCHAR(80) NOT NULL,
    CONTACT_TITLE VARCHAR(80) NOT NULL,
    CITY VARCHAR(40) NOT NULL,
    REGION VARCHAR(40) NOT NULL,
    COUNTRY VARCHAR(40) NOT NULL
)*/

/*
CREATE TABLE DIM_CATEGORIES(
	ID_CATEGORY INT IDENTITY NOT NULL CONSTRAINT PK_CATEGORY PRIMARY KEY,
	CATEGORY_ID INT,
	CATEGORY_NAME VARCHAR(50),
	DESCRIPTION VARCHAR(MAX)
)
*/


/*
CREATE TABLE DIM_EMPLOYEE_TERRITORIES(
	ID_EMPLOYEE_TERRITORY INT IDENTITY NOT NULL CONSTRAINT PK_EMPLOYEE_TERRITORY PRIMARY KEY,
	TERRITORY_ID VARCHAR(10) NOT NULL,
    EMPLOYEE_ID INT NOT NULL,
	TERRITORY VARCHAR(50) NOT NULL,
    EMPLOYEE VARCHAR(80) NOT NULL,
    REGION VARCHAR(30) NOT NULL
)
*/



ALTER TABLE FACT_SALES  WITH CHECK ADD  CONSTRAINT FK_SALES_EMPLOYEES FOREIGN KEY(ID_EMPLOYEE)
REFERENCES DIM_EMPLOYEES (ID_EMPLOYEE)

ALTER TABLE FACT_SALES  WITH CHECK ADD  CONSTRAINT FK_SALES_ORDERS FOREIGN KEY(ID_ORDER)
REFERENCES DIM_ORDERS (ID_ORDER)

ALTER TABLE FACT_SALES  WITH CHECK ADD  CONSTRAINT FK_SALES_CUSTOMERS FOREIGN KEY(ID_CUSTOMER)
REFERENCES DIM_CUSTOMERS (ID_CUSTOMER)

ALTER TABLE FACT_SALES  WITH CHECK ADD  CONSTRAINT FK_SALES_PRODUCTS FOREIGN KEY(ID_PRODUCT)
REFERENCES DIM_PRODUCTS (ID_PRODUCT)

ALTER TABLE FACT_SALES  WITH CHECK ADD  CONSTRAINT FK_SALES_TIME FOREIGN KEY(ID_TIME)
REFERENCES DIM_TIME (ID_TIME)

/*
ALTER TABLE FACT_SALES  WITH CHECK ADD  CONSTRAINT FK_SALES_CATEGORIES FOREIGN KEY(ID_CATEGORY)
REFERENCES DIM_CATEGORIES (ID_CATEGORY)
*/

/*
ALTER TABLE FACT_SALES  WITH CHECK ADD  CONSTRAINT FK_SALES_SUPPLIERS FOREIGN KEY(ID_SUPPLIER)
REFERENCES DIM_SUPPLIERS (ID_SUPPLIER)
*/

---------------------------------------------------------------------------------------------------


-- DIM_EMPLOYEES:

SELECT DISTINCT
UPPER(E.EMPLOYEEID) EMPLOYEE_ID,
UPPER(CONCAT(E.FIRSTNAME, ' ', E.LASTNAME)) EMPLOYEE_NAME,
UPPER(E.TITLE) TITLE,
CAST(E.BIRTHDATE AS DATE) BIRTH_DATE,
CAST(E.HIREDATE AS DATE) HIRE_DATE,
UPPER(E.CITY) CITY,
UPPER(isnull(E.REGION,'NO REGION')) REGION,
UPPER(E.COUNTRY) COUNTRY,
UPPER(R.REGIONDESCRIPTION )TERRITORY,
COALESCE(NULLIF(
UPPER(CONCAT(J.FIRSTNAME, ' ', J.LASTNAME)),''), 'NO BOSS') REPORTS_TO
FROM EMPLOYEES E
LEFT JOIN EMPLOYEES J
ON E.REPORTSTO = J.EMPLOYEEID
LEFT JOIN EMPLOYEETERRITORIES ET
ON E.EMPLOYEEID = ET.EMPLOYEEID
LEFT JOIN TERRITORIES T
ON ET.TERRITORYID = T.TERRITORYID
LEFT JOIN REGION R
ON T.REGIONID = R. REGIONID
ORDER BY EMPLOYEE_ID


-- DIM_ORDERS:

SELECT
UPPER(O.ORDERID) ORDER_ID,
UPPER(C.CUSTOMERID) CUSTOMERID,
UPPER(C.COMPANYNAME) CUSTOMER,
UPPER(CONCAT(E.FIRSTNAME, ' ', E.LASTNAME)) EMPLOYEE,
CAST(O.ORDERDATE AS DATE) ORDER_DATE,
CAST(O.REQUIREDDATE AS DATE) REQUIRED_DATE,
isnull(CAST(O.SHIPPEDDATE AS DATE),CAST(getDATE() AS DATE)) SHIPPED_DATE,
UPPER(S.COMPANYNAME) SHIPPER,
UPPER(O.FREIGHT) FREIGHT,
UPPER(O.SHIPCITY) SHIP_CITY,
UPPER(isnull(O.SHIPREGION,'NO SHIP REGION')) SHIP_REGION,
UPPER(O.SHIPCOUNTRY) SHIP_COUNTRY
FROM ORDERS O
INNER JOIN EMPLOYEES E
ON E.EMPLOYEEID = O.EMPLOYEEID
INNER JOIN CUSTOMERS C
ON C.CUSTOMERID = O.CUSTOMERID
INNER JOIN SHIPPERS S
ON S.SHIPPERID = O.SHIPVIA
ORDER BY ORDER_ID

--DIM_CUSTOMERS:

SELECT
UPPER(C.CUSTOMERID) CUSTOMER_ID,
UPPER(C.COMPANYNAME) COMPANY_NAME,
UPPER(C.CONTACTNAME) CONTACT_NAME,
UPPER(C.CONTACTTITLE) CONTACT_TITLE,
UPPER(C.CITY) CITY,
UPPER(ISNULL(C.REGION,'NO REGION')) REGION,
UPPER(C.COUNTRY) COUNTRY,
ISNULL(
CASE WHEN cc.grupo=1 THEN
'A'
WHEN CC.GRUPO=2 THEN
'B'
WHEN CC.GRUPO=3 THEN
'C'
WHEN CC.GRUPO=4 THEN
'D'
END ,'E' ) CATEGORY,
ISNULL(CAST(IC.ENTRY AS DATE),CAST(GETDATE() AS DATE)) ENTRY_DATE
FROM CUSTOMERS C
LEFT JOIN ( 
SELECT MIN(ORDERDATE) ENTRY, CUSTOMERID FROM ORDERS 
GROUP BY CUSTOMERID 
) IC
ON C.CUSTOMERID=IC.CUSTOMERID 
LEFT JOIN (
 SELECT CUSTOMERID, SUM(QUANTITY * UNITPRICE) SALES,
 NTILE(4) OVER(ORDER BY SUM(QUANTITY * UNITPRICE) DESC) AS GRUPO
 FROM ORDERS O
 INNER JOIN ORDERDETAILS OD
 ON O.ORDERID = OD.ORDERID
 WHERE SHIPPEDDATE IS NOT NULL
 GROUP BY CUSTOMERID) CC
 ON C.CUSTOMERID = CC.CUSTOMERID


-- DIM_PRODUCTS:

SELECT
UPPER(P.PRODUCTID) PRODUCT_ID,
UPPER(P.PRODUCTNAME) PRODUCT_NAME,
UPPER(C.CATEGORYNAME) CATEGORY,
UPPER(C.DESCRIPTION) DESCRIPTION,
UPPER(S.COMPANYNAME) SUPPLIER,
UPPER(P.REORDERLEVEL) REORDER_LEVEL
FROM PRODUCTS P
INNER JOIN SUPPLIERS S
ON S.SUPPLIERID = P.SUPPLIERID
INNER JOIN CATEGORIES C
ON C.CATEGORYID = P.CATEGORYID


-- ORDER_DETAILS

SELECT * FROM ORDERDETAILS


-- FACT_SALES:

SELECT 
E.ID_EMPLOYEE,
O.ID_ORDER,
C.ID_CUSTOMER,
PR.ID_PRODUCT,
TI.ID_TIME,
OD.QUANTITY,
OD.UNITPRICE UNIT_PRICE,
OD.DISCOUNT,
O.ORDER_DATE
FROM ORDER_DETAILS OD
INNER JOIN DIM_ORDERS O
ON OD.ORDERID = O.ORDER_ID
INNER JOIN DIM_PRODUCTS PR
ON OD.PRODUCTID = PR.PRODUCT_ID
INNER JOIN DIM_TIME TI
ON TI.DATE = O.ORDER_DATE
INNER JOIN DIM_CUSTOMERS C
ON C.COMPANY_NAME = O.CUSTOMER
INNER JOIN DIM_EMPLOYEES E
ON E.EMPLOYEE_NAME = O.EMPLOYEE




/*
DIM_CATEGORIES:

SELECT
UPPER(CATEGORYID) CATEGORY_ID,
UPPER(CATEGORYNAME) CATEGORY_NAME,
UPPER(DESCRIPTION) DESCRIPTION
FROM CATEGORIES 
ORDER BY CATEGORY_ID
*/

/*

DIM_SUPPLIERS:

SELECT
UPPER(SUPPLIERID) SUPPLIER_ID,
UPPER(COMPANYNAME) COMPANY_NAME,
UPPER(CONTACTNAME) CONTACT_NAME,
UPPER(CONTACTTITLE) CONTACT_TITLE,
UPPER(CITY) CITY,
UPPER(isnull(REGION,'NO REGION')) REGION,
UPPER(COUNTRY) COUNTRY
FROM SUPPLIERS 
ORDER BY SUPPLIER_ID
*/

/*
DIM_EMPLOYEE_TERRITORIES:

SELECT
UPPER(T.TERRITORYID) TERRITORY_ID,
UPPER(E.EMPLOYEEID) EMPLOYEE_ID,
UPPER(T.TERRITORYDESCRIPTION) TERRITORY_DESCRIPTION,
UPPER(CONCAT(E.FIRSTNAME, ' ', E.LASTNAME)) EMPLOYEE,
UPPER(REGIONDESCRIPTION) REGION
FROM EMPLOYEES E
INNER JOIN EMPLOYEETERRITORIES ET
ON E.EMPLOYEEID = ET.EMPLOYEEID
INNER JOIN TERRITORIES T
ON T.TERRITORYID = ET.TERRITORYID
INNER JOIN REGION G
ON G.REGIONID = T.REGIONID
ORDER BY EMPLOYEE_ID
*/

